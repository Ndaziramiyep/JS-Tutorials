# Git Commands and Their Explanations:

1. git init
   - Initializes a new Git repository in the current directory.

2. git clone <repository-url>
   - Clones a remote repository into a local directory.

3. git status
   - Displays the state of the working directory and staging area.

4. git add <file> OR git add .
   - Stages changes for the next commit. Use "." to stage everything.

5. git commit -m "Your message"
   - Commits the staged changes with a message.

6. git branch
   - Lists all local branches.

7. git branch <branch-name>
   - Creates a new branch.

8. git checkout <branch-name>
   - Switches to the specified branch.

9. git checkout -b <branch-name>
   - Creates and switches to a new branch.

10. git merge <branch-name>
    - Merges the specified branch into the current branch.

11. git log
    - Shows a history of commits.

12. git remote add origin <repository-url>
    - Adds a remote named "origin" pointing to the specified URL.

13. git remote -v
    - Displays the URLs of the remotes.

14. git push -u origin main
    - Pushes the `main` branch to `origin` and sets upstream tracking.

15. git push
    - Pushes committed changes to the remote repository.

16. git pull
    - Fetches and merges changes from the remote repository.

17. git fetch
    - Downloads new data from a remote repository without merging.

18. git reset --hard <commit-id>
    - Resets to a specific commit and discards all changes after it.

19. git revert <commit-id>
    - Reverts a specific commit by creating a new commit.

20. git stash
    - Temporarily stores uncommitted changes.

21. git stash pop
    - Restores the most recent stash and removes it from stash list.

22. git config --global user.name "Your Name"
    - Sets your global Git username.

23. git config --global user.email "you@example.com"
    - Sets your global Git email address.

24. git diff
    - Shows changes between working directory and index or a commit.

# End of File
